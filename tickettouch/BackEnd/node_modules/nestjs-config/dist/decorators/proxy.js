"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyProperty = void 0;
/**
 * @param {string} propertyName
 * @returns {<T extends {new(...args: any[]): {}}>(constructor: T) => {new(...args: any[]): {}; prototype: {}}}
 * @constructor
 */
const ProxyProperty = (propertyName) => function classDecorator(constructor) {
    const decorated = class extends constructor {
        constructor(...args) {
            super(...args);
            return new Proxy(this, {
                get: (target, prop) => {
                    if (target[prop] !== undefined) {
                        return target[prop];
                    }
                    else if (target[propertyName].hasOwnProperty(prop)) {
                        return target[propertyName][prop];
                    }
                },
            });
        }
    };
    /**
     * fix for node 12.16.0 issue: https://github.com/microsoft/TypeScript/issues/37157
     * */
    Object.defineProperty(decorated, 'name', { value: constructor.name });
    return decorated;
};
exports.ProxyProperty = ProxyProperty;
